{"version":3,"sources":["@wordpress/block-editor/src/components/block-mover/index.js"],"names":["first","last","castArray","classnames","ToolbarGroup","__experimentalToolbarItem","ToolbarItem","getBlockType","Component","withSelect","BlockMoverUpButton","BlockMoverDownButton","BlockMover","arguments","state","isFocused","onFocus","bind","onBlur","setState","props","isFirst","isLast","clientIds","isLocked","isHidden","rootClientId","orientation","itemProps","select","getBlock","getBlockIndex","getBlockListSettings","getTemplateLock","getBlockOrder","getBlockRootClientId","normalizedClientIds","firstClientId","block","firstIndex","lastIndex","blockOrder","length","blockType","name"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { first, last, castArray } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tToolbarGroup,\n\t__experimentalToolbarItem as ToolbarItem,\n} from '@wordpress/components';\nimport { getBlockType } from '@wordpress/blocks';\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { BlockMoverUpButton, BlockMoverDownButton } from './button';\n\nexport class BlockMover extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisFocused: false,\n\t\t};\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t}\n\n\tonFocus() {\n\t\tthis.setState( {\n\t\t\tisFocused: true,\n\t\t} );\n\t}\n\n\tonBlur() {\n\t\tthis.setState( {\n\t\t\tisFocused: false,\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tisFirst,\n\t\t\tisLast,\n\t\t\tclientIds,\n\t\t\tisLocked,\n\t\t\tisHidden,\n\t\t\trootClientId,\n\t\t\torientation,\n\t\t} = this.props;\n\t\tconst { isFocused } = this.state;\n\t\tif ( isLocked || ( isFirst && isLast && ! rootClientId ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// We emulate a disabled state because forcefully applying the `disabled`\n\t\t// attribute on the buttons while it has focus causes the screen to change\n\t\t// to an unfocused state (body as active element) without firing blur on,\n\t\t// the rendering parent, leaving it unable to react to focus out.\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ classnames( 'block-editor-block-mover', {\n\t\t\t\t\t'is-visible': isFocused || ! isHidden,\n\t\t\t\t\t'is-horizontal': orientation === 'horizontal',\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( itemProps ) => (\n\t\t\t\t\t\t\t<BlockMoverUpButton\n\t\t\t\t\t\t\t\tclientIds={ clientIds }\n\t\t\t\t\t\t\t\t{ ...itemProps }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ToolbarItem>\n\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( itemProps ) => (\n\t\t\t\t\t\t\t<BlockMoverDownButton\n\t\t\t\t\t\t\t\tclientIds={ clientIds }\n\t\t\t\t\t\t\t\t{ ...itemProps }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ToolbarItem>\n\t\t\t\t</ToolbarGroup>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withSelect( ( select, { clientIds } ) => {\n\tconst {\n\t\tgetBlock,\n\t\tgetBlockIndex,\n\t\tgetBlockListSettings,\n\t\tgetTemplateLock,\n\t\tgetBlockOrder,\n\t\tgetBlockRootClientId,\n\t} = select( 'core/block-editor' );\n\tconst normalizedClientIds = castArray( clientIds );\n\tconst firstClientId = first( normalizedClientIds );\n\tconst block = getBlock( firstClientId );\n\tconst rootClientId = getBlockRootClientId( first( normalizedClientIds ) );\n\tconst firstIndex = getBlockIndex( firstClientId, rootClientId );\n\tconst lastIndex = getBlockIndex(\n\t\tlast( normalizedClientIds ),\n\t\trootClientId\n\t);\n\tconst blockOrder = getBlockOrder( rootClientId );\n\tconst isFirst = firstIndex === 0;\n\tconst isLast = lastIndex === blockOrder.length - 1;\n\n\treturn {\n\t\tblockType: block ? getBlockType( block.name ) : null,\n\t\tisLocked: getTemplateLock( rootClientId ) === 'all',\n\t\trootClientId,\n\t\tfirstIndex,\n\t\tisFirst,\n\t\tisLast,\n\t\torientation: getBlockListSettings( rootClientId )?.orientation,\n\t};\n} )( BlockMover );\n"]}