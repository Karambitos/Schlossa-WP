{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/quick-inserter.js"],"names":["SEARCH_THRESHOLD","SHOWN_BLOCK_TYPES","SHOWN_BLOCK_PATTERNS","preventArrowKeysPropagation","event","LEFT","DOWN","RIGHT","UP","BACKSPACE","ENTER","includes","keyCode","stopPropagation","stopKeyPropagation","QuickInserterList","blockTypes","blockPatterns","onSelectBlockType","onSelectBlockPattern","onHover","shownBlockTypes","slice","shownBlockPatterns","length","QuickInserter","rootClientId","clientId","isAppender","selectBlockOnInsert","debouncedSpeak","filterValue","setFilterValue","destinationRootClientId","onInsertBlocks","onToggleInsertionPoint","blockTypeCategories","blockTypeCollections","patterns","showPatterns","showSearch","filteredBlockTypes","filteredBlockPatterns","setInsererIsOpened","select","getSettings","__experimentalSetIsInserterOpened","previousBlockClientId","getPreviousBlockClientId","selectBlock","count","resultsFoundMessage","onBrowseAll","value"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { orderBy } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useMemo, useEffect } from '@wordpress/element';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tVisuallyHidden,\n\tButton,\n\twithSpokenMessages,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { LEFT, RIGHT, UP, DOWN, BACKSPACE, ENTER } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport BlockPatternsList from '../block-patterns-list';\nimport InserterSearchForm from './search-form';\nimport InserterPanel from './panel';\nimport InserterNoResults from './no-results';\nimport useInsertionPoint from './hooks/use-insertion-point';\nimport usePatternsState from './hooks/use-patterns-state';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport { searchBlockItems, searchItems } from './search-items';\n\nconst SEARCH_THRESHOLD = 6;\nconst SHOWN_BLOCK_TYPES = 6;\nconst SHOWN_BLOCK_PATTERNS = 2;\n\nconst preventArrowKeysPropagation = ( event ) => {\n\tif (\n\t\t[ LEFT, DOWN, RIGHT, UP, BACKSPACE, ENTER ].includes( event.keyCode )\n\t) {\n\t\t// Stop the key event from propagating up to ObserveTyping.startTypingInTextField.\n\t\tevent.stopPropagation();\n\t}\n};\nconst stopKeyPropagation = ( event ) => event.stopPropagation();\n\nfunction QuickInserterList( {\n\tblockTypes,\n\tblockPatterns,\n\tonSelectBlockType,\n\tonSelectBlockPattern,\n\tonHover,\n} ) {\n\tconst shownBlockTypes = useMemo(\n\t\t() =>\n\t\t\torderBy( blockTypes, [ 'frecency' ], [ 'desc' ] ).slice(\n\t\t\t\t0,\n\t\t\t\tSHOWN_BLOCK_TYPES\n\t\t\t),\n\t\t[ blockTypes ]\n\t);\n\tconst shownBlockPatterns = useMemo(\n\t\t() => blockPatterns.slice( 0, SHOWN_BLOCK_PATTERNS ),\n\t\t[ blockTypes ]\n\t);\n\treturn (\n\t\t<div className=\"block-editor-inserter__quick-inserter-results\">\n\t\t\t{ ! shownBlockTypes.length && ! shownBlockPatterns.length && (\n\t\t\t\t<InserterNoResults />\n\t\t\t) }\n\n\t\t\t{ !! shownBlockTypes.length && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<VisuallyHidden>{ __( 'Blocks' ) }</VisuallyHidden>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\titems={ shownBlockTypes }\n\t\t\t\t\t\tonSelect={ onSelectBlockType }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ !! shownBlockTypes.length && !! shownBlockPatterns.length && (\n\t\t\t\t<div className=\"block-editor-inserter__quick-inserter-separator\" />\n\t\t\t) }\n\n\t\t\t{ !! shownBlockPatterns.length && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<VisuallyHidden>{ __( 'Blocks' ) }</VisuallyHidden>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"block-editor-inserter__quick-inserter-patterns\">\n\t\t\t\t\t\t<BlockPatternsList\n\t\t\t\t\t\t\tshownPatterns={ shownBlockPatterns }\n\t\t\t\t\t\t\tblockPatterns={ shownBlockPatterns }\n\t\t\t\t\t\t\tonClickPattern={ onSelectBlockPattern }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction QuickInserter( {\n\trootClientId,\n\tclientId,\n\tisAppender,\n\tselectBlockOnInsert,\n\tdebouncedSpeak,\n} ) {\n\tconst [ filterValue, setFilterValue ] = useState( '' );\n\tconst [\n\t\tdestinationRootClientId,\n\t\tonInsertBlocks,\n\t\tonToggleInsertionPoint,\n\t] = useInsertionPoint( {\n\t\trootClientId,\n\t\tclientId,\n\t\tisAppender,\n\t\tselectBlockOnInsert,\n\t} );\n\tconst [\n\t\tblockTypes,\n\t\tblockTypeCategories,\n\t\tblockTypeCollections,\n\t\tonSelectBlockType,\n\t] = useBlockTypesState( destinationRootClientId, onInsertBlocks );\n\tconst [ patterns, , onSelectBlockPattern ] = usePatternsState(\n\t\tonInsertBlocks\n\t);\n\tconst showPatterns =\n\t\t! destinationRootClientId && patterns.length && !! filterValue;\n\tconst showSearch =\n\t\t( showPatterns && patterns.length > SEARCH_THRESHOLD ) ||\n\t\tblockTypes.length > SEARCH_THRESHOLD;\n\n\tconst filteredBlockTypes = useMemo( () => {\n\t\treturn searchBlockItems(\n\t\t\tblockTypes,\n\t\t\tblockTypeCategories,\n\t\t\tblockTypeCollections,\n\t\t\tfilterValue\n\t\t);\n\t}, [ filterValue, blockTypes, blockTypeCategories, blockTypeCollections ] );\n\n\tconst filteredBlockPatterns = useMemo(\n\t\t() => searchItems( patterns, filterValue ),\n\t\t[ filterValue, patterns ]\n\t);\n\n\tconst setInsererIsOpened = useSelect(\n\t\t( select ) =>\n\t\t\tselect( 'core/block-editor' ).getSettings()\n\t\t\t\t.__experimentalSetIsInserterOpened,\n\t\t[]\n\t);\n\n\tconst previousBlockClientId = useSelect(\n\t\t( select ) =>\n\t\t\tselect( 'core/block-editor' ).getPreviousBlockClientId( clientId ),\n\t\t[ clientId ]\n\t);\n\n\tuseEffect( () => {\n\t\tif ( setInsererIsOpened ) {\n\t\t\tsetInsererIsOpened( false );\n\t\t}\n\t}, [ setInsererIsOpened ] );\n\n\tconst { selectBlock } = useDispatch( 'core/block-editor' );\n\n\t// Announce search results on change\n\tuseEffect( () => {\n\t\tif ( ! filterValue ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = filteredBlockTypes.length + filteredBlockPatterns.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ filterValue, debouncedSpeak ] );\n\n\t// When clicking Browse All select the appropriate block so as\n\t// the insertion point can work as expected\n\tconst onBrowseAll = () => {\n\t\t// We have to select the previous block because the menu inserter\n\t\t// inserts the new block after the selected one.\n\t\tselectBlock( previousBlockClientId );\n\t\tsetInsererIsOpened( true );\n\t};\n\n\t// Disable reason (no-autofocus): The inserter menu is a modal display, not one which\n\t// is always visible, and one which already incurs this behavior of autoFocus via\n\t// Popover's focusOnMount.\n\t// Disable reason (no-static-element-interactions): Navigational key-presses within\n\t// the menu are prevented from triggering WritingFlow and ObserveTyping interactions.\n\t/* eslint-disable jsx-a11y/no-autofocus, jsx-a11y/no-static-element-interactions */\n\treturn (\n\t\t<div\n\t\t\tclassName=\"block-editor-inserter__quick-inserter\"\n\t\t\tonKeyPress={ stopKeyPropagation }\n\t\t\tonKeyDown={ preventArrowKeysPropagation }\n\t\t>\n\t\t\t{ showSearch && (\n\t\t\t\t<InserterSearchForm\n\t\t\t\t\tvalue={ filterValue }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tsetFilterValue( value );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\n\t\t\t<QuickInserterList\n\t\t\t\tblockTypes={ filteredBlockTypes }\n\t\t\t\tblockPatterns={ showPatterns ? filteredBlockPatterns : [] }\n\t\t\t\tonSelectBlockPattern={ onSelectBlockPattern }\n\t\t\t\tonSelectBlockType={ onSelectBlockType }\n\t\t\t\tonHover={ onToggleInsertionPoint }\n\t\t\t/>\n\n\t\t\t{ setInsererIsOpened && (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"block-editor-inserter__quick-inserter-expand\"\n\t\t\t\t\tonClick={ onBrowseAll }\n\t\t\t\t\taria-label={ __(\n\t\t\t\t\t\t'Browse all. This will open the main inserter panel in the editor toolbar.'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Browse all' ) }\n\t\t\t\t</Button>\n\t\t\t) }\n\t\t</div>\n\t);\n\t/* eslint-enable jsx-a11y/no-autofocus, jsx-a11y/no-static-element-interactions */\n}\n\nexport default withSpokenMessages( QuickInserter );\n"]}