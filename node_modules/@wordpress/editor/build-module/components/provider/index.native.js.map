{"version":3,"sources":["@wordpress/editor/src/components/provider/index.native.js"],"names":["RNReactNativeGutenbergBridge","subscribeParentGetHtml","subscribeParentToggleHTMLMode","subscribeUpdateHtml","subscribeSetTitle","subscribeMediaAppend","subscribeReplaceBlock","subscribeUpdateTheme","Component","count","wordCount","parse","serialize","getUnregisteredTypeHandlerName","createBlock","withDispatch","withSelect","compose","applyFilters","SETTINGS_DEFAULTS","postTypeEntities","name","baseURL","map","postTypeEntity","kind","transientEdits","blocks","mergedEdits","meta","EditorProvider","NativeEditorProvider","arguments","post","props","addEntities","receiveEntityRecords","type","subscriptionParentGetHtml","serializeToNativeAction","subscriptionParentToggleHTMLMode","toggleMode","subscriptionParentSetTitle","payload","editTitle","title","subscriptionParentUpdateHtml","updateHtmlAction","html","subscriptionParentReplaceBlock","replaceBlockAction","clientId","subscriptionParentMediaAppend","blockName","mediaType","newBlock","id","mediaId","mediaUrl","indexAfterSelected","selectedBlockIndex","insertionIndex","blockCount","insertBlock","subscriptionParentUpdateTheme","theme","colors","undefined","gradients","updateSettings","remove","prevProps","isReady","isUnsupportedBlock","unsupportedBlockNames","filter","block","attributes","originalName","editorDidMount","mode","hasChanges","raw","content","contentInfo","characterCount","paragraphCount","provideToNative_Html","parsed","resetEditorBlocksWithoutUndoLevel","blockClientId","replaceBlock","switchMode","clearSelectedBlock","children","select","isEditorReady","__unstableIsEditorReady","getEditorBlocks","getEditedPostAttribute","getEditedPostContent","getEditorMode","getBlockIndex","getSelectedBlockClientId","getGlobalBlockCount","selectedBlockClientId","dispatch","editPost","resetEditorBlocks","switchEditorMode","__unstableShouldCreateUndoLevel"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\n/**\n * WordPress dependencies\n */\nimport RNReactNativeGutenbergBridge, {\n\tsubscribeParentGetHtml,\n\tsubscribeParentToggleHTMLMode,\n\tsubscribeUpdateHtml,\n\tsubscribeSetTitle,\n\tsubscribeMediaAppend,\n\tsubscribeReplaceBlock,\n\tsubscribeUpdateTheme,\n} from '@wordpress/react-native-bridge';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport {\n\tparse,\n\tserialize,\n\tgetUnregisteredTypeHandlerName,\n\tcreateBlock,\n} from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { applyFilters } from '@wordpress/hooks';\nimport { SETTINGS_DEFAULTS } from '@wordpress/block-editor';\n\nconst postTypeEntities = [\n\t{ name: 'post', baseURL: '/wp/v2/posts' },\n\t{ name: 'page', baseURL: '/wp/v2/pages' },\n\t{ name: 'attachment', baseURL: '/wp/v2/media' },\n\t{ name: 'wp_block', baseURL: '/wp/v2/blocks' },\n].map( ( postTypeEntity ) => ( {\n\tkind: 'postType',\n\t...postTypeEntity,\n\ttransientEdits: {\n\t\tblocks: true,\n\t},\n\tmergedEdits: {\n\t\tmeta: true,\n\t},\n} ) );\n\n/**\n * Internal dependencies\n */\nimport EditorProvider from './index.js';\n\nclass NativeEditorProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\t// Keep a local reference to `post` to detect changes\n\t\tthis.post = this.props.post;\n\t\tthis.props.addEntities( postTypeEntities );\n\t\tthis.props.receiveEntityRecords(\n\t\t\t'postType',\n\t\t\tthis.post.type,\n\t\t\tthis.post\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.subscriptionParentGetHtml = subscribeParentGetHtml( () => {\n\t\t\tthis.serializeToNativeAction();\n\t\t} );\n\n\t\tthis.subscriptionParentToggleHTMLMode = subscribeParentToggleHTMLMode(\n\t\t\t() => {\n\t\t\t\tthis.toggleMode();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentSetTitle = subscribeSetTitle( ( payload ) => {\n\t\t\tthis.props.editTitle( payload.title );\n\t\t} );\n\n\t\tthis.subscriptionParentUpdateHtml = subscribeUpdateHtml(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateHtmlAction( payload.html );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentReplaceBlock = subscribeReplaceBlock(\n\t\t\t( payload ) => {\n\t\t\t\tthis.replaceBlockAction( payload.html, payload.clientId );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentMediaAppend = subscribeMediaAppend(\n\t\t\t( payload ) => {\n\t\t\t\tconst blockName = 'core/' + payload.mediaType;\n\t\t\t\tconst newBlock = createBlock( blockName, {\n\t\t\t\t\tid: payload.mediaId,\n\t\t\t\t\t[ payload.mediaType === 'image'\n\t\t\t\t\t\t? 'url'\n\t\t\t\t\t\t: 'src' ]: payload.mediaUrl,\n\t\t\t\t} );\n\n\t\t\t\tconst indexAfterSelected = this.props.selectedBlockIndex + 1;\n\t\t\t\tconst insertionIndex =\n\t\t\t\t\tindexAfterSelected || this.props.blockCount;\n\n\t\t\t\tthis.props.insertBlock( newBlock, insertionIndex );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentUpdateTheme = subscribeUpdateTheme(\n\t\t\t( theme ) => {\n\t\t\t\t// Reset the colors and gradients in case one theme was set with custom items and then updated to a theme without custom elements.\n\t\t\t\tif ( theme.colors === undefined ) {\n\t\t\t\t\ttheme.colors = SETTINGS_DEFAULTS.colors;\n\t\t\t\t}\n\n\t\t\t\tif ( theme.gradients === undefined ) {\n\t\t\t\t\ttheme.gradients = SETTINGS_DEFAULTS.gradients;\n\t\t\t\t}\n\n\t\t\t\tthis.props.updateSettings( theme );\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentGetHtml ) {\n\t\t\tthis.subscriptionParentGetHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentToggleHTMLMode ) {\n\t\t\tthis.subscriptionParentToggleHTMLMode.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentSetTitle ) {\n\t\t\tthis.subscriptionParentSetTitle.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateHtml ) {\n\t\t\tthis.subscriptionParentUpdateHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentReplaceBlock ) {\n\t\t\tthis.subscriptionParentReplaceBlock.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentMediaAppend ) {\n\t\t\tthis.subscriptionParentMediaAppend.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateTheme ) {\n\t\t\tthis.subscriptionParentUpdateTheme.remove();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! prevProps.isReady && this.props.isReady ) {\n\t\t\tconst blocks = this.props.blocks;\n\t\t\tconst isUnsupportedBlock = ( { name } ) =>\n\t\t\t\tname === getUnregisteredTypeHandlerName();\n\t\t\tconst unsupportedBlockNames = blocks\n\t\t\t\t.filter( isUnsupportedBlock )\n\t\t\t\t.map( ( block ) => block.attributes.originalName );\n\t\t\tRNReactNativeGutenbergBridge.editorDidMount(\n\t\t\t\tunsupportedBlockNames\n\t\t\t);\n\t\t}\n\t}\n\n\tserializeToNativeAction() {\n\t\tconst title = this.props.title;\n\t\tlet html;\n\n\t\tif ( this.props.mode === 'text' ) {\n\t\t\t// The HTMLTextInput component does not update the store when user is doing changes\n\t\t\t// Let's request the HTML from the component's state directly\n\t\t\thtml = applyFilters( 'native.persist-html' );\n\t\t} else {\n\t\t\thtml = serialize( this.props.blocks );\n\t\t}\n\n\t\tconst hasChanges =\n\t\t\ttitle !== this.post.title.raw || html !== this.post.content.raw;\n\n\t\t// Variable to store the content structure metrics.\n\t\tconst contentInfo = {};\n\t\tcontentInfo.characterCount = wordCount(\n\t\t\thtml,\n\t\t\t'characters_including_spaces'\n\t\t);\n\t\tcontentInfo.wordCount = wordCount( html, 'words' );\n\t\tcontentInfo.paragraphCount = this.props.paragraphCount;\n\t\tcontentInfo.blockCount = this.props.blockCount;\n\t\tRNReactNativeGutenbergBridge.provideToNative_Html(\n\t\t\thtml,\n\t\t\ttitle,\n\t\t\thasChanges,\n\t\t\tcontentInfo\n\t\t);\n\n\t\tif ( hasChanges ) {\n\t\t\tthis.post.title.raw = title;\n\t\t\tthis.post.content.raw = html;\n\t\t}\n\t}\n\n\tupdateHtmlAction( html ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.resetEditorBlocksWithoutUndoLevel( parsed );\n\t}\n\n\treplaceBlockAction( html, blockClientId ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.replaceBlock( blockClientId, parsed );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode } = this.props;\n\t\t// refresh html content first\n\t\tthis.serializeToNativeAction();\n\t\t// make sure to blur the selected block and dismiss the keyboard\n\t\tthis.props.clearSelectedBlock();\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tpost, // eslint-disable-line no-unused-vars\n\t\t\t...props\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<EditorProvider post={ this.post } { ...props }>\n\t\t\t\t{ children }\n\t\t\t</EditorProvider>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\t__unstableIsEditorReady: isEditorReady,\n\t\t\tgetEditorBlocks,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostContent,\n\t\t} = select( 'core/editor' );\n\t\tconst { getEditorMode } = select( 'core/edit-post' );\n\n\t\tconst {\n\t\t\tgetBlockIndex,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetGlobalBlockCount,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\treturn {\n\t\t\tmode: getEditorMode(),\n\t\t\tisReady: isEditorReady(),\n\t\t\tblocks: getEditorBlocks(),\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tgetEditedPostContent,\n\t\t\tselectedBlockIndex: getBlockIndex( selectedBlockClientId ),\n\t\t\tblockCount: getGlobalBlockCount(),\n\t\t\tparagraphCount: getGlobalBlockCount( 'core/paragraph' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\tconst {\n\t\t\tupdateSettings,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\treplaceBlock,\n\t\t} = dispatch( 'core/block-editor' );\n\t\tconst { switchEditorMode } = dispatch( 'core/edit-post' );\n\t\tconst { addEntities, receiveEntityRecords } = dispatch( 'core' );\n\n\t\treturn {\n\t\t\tupdateSettings,\n\t\t\taddEntities,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\treceiveEntityRecords,\n\t\t\tresetEditorBlocksWithoutUndoLevel( blocks ) {\n\t\t\t\tresetEditorBlocks( blocks, {\n\t\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t\t} );\n\t\t\t},\n\t\t\tswitchMode( mode ) {\n\t\t\t\tswitchEditorMode( mode );\n\t\t\t},\n\t\t\treplaceBlock,\n\t\t};\n\t} ),\n] )( NativeEditorProvider );\n"]}